{"version":3,"sources":["components/Rules.js","components/Filter.js","components/RulesByTitle.js","components/Title.js","App.js","index.js"],"names":["Rules","setIsSelected","filter","arrayOfRules","useEffect","rule","content","includes","toLocaleLowerCase","map","ListItem","ListItemText","highlightClassName","searchWords","autoEscape","textToHighlight","id","Filter","changeFilter","TextField","label","variant","inputProps","maxLength","onChange","Button","type","color","startIcon","onClick","RulesByTitle","props","ruleToShow","show","Title","filterField","setTitle","title","previousTitle","titleString","App","filterTimeoutHandle","useState","setFilterField","setRules","setArrayOfRules","arrayOfTitles","setArrayOfTitles","setRuleToShow","isSelected","setPreviousTitle","tempRules","axios","get","then","response","data","parseText","titles","match","uniqueTitles","Set","titleIds","toString","contentIds","contentArray","i","length","contentObject","push","titleArray","j","titleObject","concat","onSelect","titleId","ruleArray","rulesByTitle","undefined","substring","newArray","ListItemLink","button","component","Container","fixed","Grid","container","item","xs","List","className","href","event","filterText","target","value","clearTimeout","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adf62e55.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport Highlighter from \"react-highlight-words\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nconst Rules = ({ setIsSelected, filter, arrayOfRules }) => {\r\n    useEffect(() => {\r\n        setIsSelected(true)\r\n    }, [setIsSelected])\r\n    return (\r\n        <div>\r\n            {arrayOfRules.filter(rule =>\r\n                rule.content.includes(filter.toLocaleLowerCase())).map(rule => (\r\n                    <ListItem key={rule.id}><ListItemText>\r\n                        <Highlighter\r\n                            highlightClassName=\"YourHighlightClass\"\r\n                            searchWords={[filter]}\r\n                            autoEscape={true}\r\n                            textToHighlight={rule.content}\r\n                        />\r\n                    </ListItemText></ListItem>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\nexport default Rules\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst Filter = ({ changeFilter, filter }) => {\r\n    return (\r\n        <form>\r\n            <TextField id=\"outlined-basic\"\r\n                label=\"Search from text\"\r\n                variant=\"outlined\"\r\n                inputProps={{ maxLength: 16 }}\r\n                onChange={changeFilter}\r\n            />\r\n            <Button id=\"resetButton\"\r\n                type=\"reset\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<DeleteIcon />}\r\n                onClick={() => filter('')}>clear text field\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\nexport default Filter","import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nconst RulesByTitle = (props) => {\r\n    return (\r\n        <div>\r\n            {props.ruleToShow.map(show => (\r\n                <ListItem key={show.id}><ListItemText>{show.content}</ListItemText></ListItem>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default RulesByTitle","import React from 'react'\r\nimport { useEffect } from 'react'\r\nconst Title = ({ filterField, setTitle, title, previousTitle }) => {\r\n    var titleString = ''\r\n    if (filterField !== \"\") {\r\n        titleString = 'Filtered by word: ' + filterField\r\n    }\r\n    else {\r\n        titleString = previousTitle\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTitle(titleString)\r\n    }, [setTitle, titleString])\r\n\r\n    return (\r\n        <div>\r\n            <h2><i>{filterField !== \"\" ? titleString : title}</i></h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Title","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Grid } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Container from '@material-ui/core/Container';\nimport Rules from './components/Rules'\nimport Filter from './components/Filter'\nimport RulesByTitle from './components/RulesByTitle'\nimport Title from './components/Title'\n\n\nconst App = () => {\n  const [filterField, setFilterField] = useState('')\n  const [rules, setRules] = useState('')\n  const [arrayOfRules, setArrayOfRules] = useState([])\n  const [arrayOfTitles, setArrayOfTitles] = useState([])\n  const [ruleToShow, setRuleToShow] = useState([])\n  const [title, setTitle] = useState('')\n  const [isSelected, setIsSelected] = useState(false)\n  const [previousTitle, setPreviousTitle] = useState('')\n\n\n  var filterTimeoutHandle;\n\n  const handleFilterChange = (event) => {\n    const filterText = event.target.value;\n    if (filterTimeoutHandle !== undefined) {\n      clearTimeout(filterTimeoutHandle);\n    }\n\n    filterTimeoutHandle = setTimeout(() => {\n      setFilterField(filterText);\n    }, 750)\n  }\n\n\n  const getRulesText = () => {\n    var tempRules;\n    return axios\n      .get('https://evening-wildwood-55510.herokuapp.com/https://media.wizards.com/2021/downloads/MagicCompRules%2020210419.txt')\n      .then(response => {\n        setRules(response.data)\n        tempRules = response.data\n        parseText(tempRules)\n      })\n\n  }\n  useEffect(getRulesText, []);\n\n\n  const parseText = (tempRules) => {\n    var titles = tempRules.match(/^\\d{3}\\.+([^0-9]).*?$/gms)\n    var uniqueTitles = [...new Set(titles)]\n    var tempTitles = titles.toString()\n    var titleIds = tempTitles.match(/\\d{3}/gms)\n    var content = tempRules.match(/^\\d+\\.\\d+[.a-z].*?^$/gms)\n    var contentIds = tempRules.match(/^\\d+\\.\\d+[.a-z]/gms)\n\n    var contentArray = []\n    for (var i = 0; i < content.length; i++) {\n      var contentObject = {\n        id: contentIds[i],\n        content: content[i]\n      }\n      contentArray.push(contentObject)\n    }\n\n    var titleArray = []\n    for (var j = 0; j < uniqueTitles.length; j++) {\n      var titleObject = {\n        id: titleIds[j],\n        title: uniqueTitles[j]\n      }\n      titleArray.push(titleObject)\n    }\n    setArrayOfTitles(arrayOfTitles.concat(titleArray))\n    setArrayOfRules(arrayOfRules.concat(contentArray))\n  }\n\n  const clearRuleToShow = () => {\n    setRuleToShow([])\n  };\n\n  const onSelect = (titleObject) => {\n    clearRuleToShow()\n    setIsSelected(true)\n    setFilterField('')\n    var titleId = titleObject.id;\n    var ruleArray = arrayOfRules;\n    var rulesByTitle = [];\n\n    for (var i = 0; i < ruleArray.length; i++) {\n      if (typeof ruleArray[i].content !== undefined && ruleArray[i].content.substring(0, 3) === titleId) {\n        rulesByTitle.push(ruleArray[i]);\n      }\n    }\n    setRuleToShow(newArray => newArray.concat(rulesByTitle))\n    setTitle(titleObject.title)\n    setPreviousTitle(titleObject.title)\n  }\n\n  const ListItemLink = (props) => {\n    return <ListItem button component=\"a\" {...props} />;\n  }\n\n\n  return (\n    <div>\n      <Container id=\"container\" fixed>\n        <strong><h1>Magic: The Gathering rules</h1></strong>\n        <strong><h2>Table of content</h2></strong>\n        <Grid container>\n          <Grid item xs={6}>\n            <List className=\"list\">\n              {arrayOfTitles.map(titleObject => (\n                <ListItem key={titleObject.id}>\n                  <ListItemLink href=\"#\" onClick={() => onSelect(titleObject)}>\n                    <ListItemText>\n                      {titleObject.title}\n                    </ListItemText>\n                  </ListItemLink>\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n          <Grid item xs={6}>\n            <Filter filter={setFilterField}\n              changeFilter={handleFilterChange}>\n            </Filter>\n            <Title title={title}\n              filterField={filterField}\n              previousTitle={previousTitle}\n              setTitle={setTitle}>\n            </Title>\n            <div>{isSelected === true ? <p></p> : <i><strong>Click titles or search with keywords</strong></i>}</div>\n            <List className=\"list\">\n              {filterField !== '' ?\n                <Rules arrayOfRules={arrayOfRules}\n                  filter={filterField}\n                  setIsSelected={setIsSelected}>\n                </Rules> :\n                <RulesByTitle ruleToShow={ruleToShow}>\n                </RulesByTitle>}\n            </List>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}